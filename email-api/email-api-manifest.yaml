apiVersion: apps/v1
kind: Deployment
metadata:
  name: email-api
  namespace: default
  labels:
    app: email-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: email-api
  template:
    metadata:
      labels:
        app: email-api
    spec:
      containers:
      - name: email-api
        image: ermand172/microservice-demo-email-api:v3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: GMAIL_EMAIL
          valueFrom:
            secretKeyRef:
              name: gmail-secret
              key: gmail-email
        - name: GMAIL_APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gmail-secret
              key: gmail-app-password
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: email-worker
  namespace: default
  labels:
    app: email-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: email-worker
  template:
    metadata:
      labels:
        app: email-worker
    spec:
      containers:
      - name: email-worker
        image: ermand172/microservice-demo-email-worker:v3
        imagePullPolicy: IfNotPresent
        env:
        - name: GMAIL_EMAIL
          valueFrom:
            secretKeyRef:
              name: gmail-secret
              key: gmail-email
        - name: GMAIL_APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gmail-secret
              key: gmail-app-password
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info"]
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: email-api-service
  namespace: default
  labels:
    app: email-api
spec:
  selector:
    app: email-api
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: email-api-ingress
  annotations:
    # NGINX Ingress Controller i√ßin anotasyonlar
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  rules:
    - host: email.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: email-api-service
                port:
                  number: 8000